% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/margins.R
\name{spread_each}
\alias{spread_each}
\title{Spread multiple variables}
\usage{
spread_each(data, key, ..., fill = NA, convert = FALSE, drop = FALSE,
  sep = ".")
}
\arguments{
\item{data}{A data frame.}

\item{key}{Column names or positions. This is passed to
\code{\link[tidyselect:vars_pull]{tidyselect::vars_pull()}}.

These arguments are passed by expression and support
\link[rlang:quasiquotation]{quasiquotation} (you can unquote column
names or column positions).}

\item{...}{the columns to act as the values to spread out.}

\item{fill}{If set, missing values will be replaced with this value. Note
that there are two types of missingness in the input: explicit missing
values (i.e. \code{NA}), and implicit missings, rows that simply aren't
present. Both types of missing value will be replaced by \code{fill}.}

\item{convert}{If \code{TRUE}, \code{\link[=type.convert]{type.convert()}} with \code{asis =
  TRUE} will be run on each of the new columns. This is useful if the value
column was a mix of variables that was coerced to a string. If the class of
the value column was factor or date, note that will not be true of the new
columns that are produced, which are coerced to character before type
conversion.}

\item{drop}{If \code{FALSE}, will keep factor levels that don't appear in the
data, filling in missing combinations with \code{fill}.}

\item{sep}{the character to use to separate parts of column names.}

\item{.}{The separator between the key levels and the value column names.}
}
\description{
This is a multiple variable version of the function
\code{\link[tidyr:spread]{tidyr::spread()}}.
}
